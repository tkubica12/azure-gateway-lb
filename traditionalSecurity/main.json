{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "18168095662438428960"
    }
  },
  "variables": {
    "location": "westeurope"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "traditional-security-rg",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vnets",
      "resourceGroup": "traditional-security-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "nvaLbIp": {
            "value": "10.1.0.100"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1614406456109938751"
            }
          },
          "parameters": {
            "nvaLbIp": {
              "type": "string"
            }
          },
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "myvnet",
              "location": "[variables('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "appsubnet",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', 'routes')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', 'routes')]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "secvnet",
              "location": "[variables('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.1.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "nvasubnet",
                    "properties": {
                      "addressPrefix": "10.1.0.0/24"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', 'myvnet', 'peeringAppNva')]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', 'secvnet')]"
                },
                "allowForwardedTraffic": true,
                "allowVirtualNetworkAccess": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'myvnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'secvnet')]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', 'secvnet', 'peeringNvaAppa')]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', 'myvnet')]"
                },
                "allowForwardedTraffic": true,
                "allowVirtualNetworkAccess": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'myvnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'secvnet')]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2021-05-01",
              "name": "routes",
              "location": "[variables('location')]",
              "properties": {
                "routes": [
                  {
                    "name": "viaNva",
                    "properties": {
                      "nextHopType": "VirtualAppliance",
                      "addressPrefix": "0.0.0.0/0",
                      "nextHopIpAddress": "[parameters('nvaLbIp')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "appsubnet": {
              "type": "string",
              "value": "[format('{0}/subnets/appsubnet', resourceId('Microsoft.Network/virtualNetworks', 'myvnet'))]"
            },
            "nvasubnet": {
              "type": "string",
              "value": "[format('{0}/subnets/nvasubnet', resourceId('Microsoft.Network/virtualNetworks', 'secvnet'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', 'traditional-security-rg')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appWithLb",
      "resourceGroup": "traditional-security-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subnet": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'traditional-security-rg'), 'Microsoft.Resources/deployments', 'vnets'), '2020-10-01').outputs.appsubnet.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1300452844617478953"
            }
          },
          "parameters": {
            "subnet": {
              "type": "string"
            }
          },
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[uniqueString(resourceGroup().id)]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "appnsg",
              "location": "[variables('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "allowWeb",
                    "properties": {
                      "description": "Allow web traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "appnic",
              "location": "[variables('location')]",
              "properties": {
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'appnsg')]"
                },
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAddress": "10.0.0.10",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnet')]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[reference(resourceId('Microsoft.Network/loadBalancers', 'applb')).backendAddressPools[0].id]"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'applb')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'appnsg')]"
              ]
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2021-05-01",
              "name": "applb",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "frontend",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "10.0.0.100",
                      "subnet": {
                        "id": "[parameters('subnet')]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "backend"
                  }
                ],
                "probes": [
                  {
                    "name": "probe",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "requestPath": "/"
                    }
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "web",
                    "properties": {
                      "protocol": "Tcp",
                      "frontendPort": 80,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'applb', 'frontend')]"
                      },
                      "backendPort": 80,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'applb', 'backend')]"
                      },
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'applb', 'probe')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-07-01",
              "name": "appvm1",
              "location": "[variables('location')]",
              "properties": {
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', uniqueString(resourceGroup().id))).primaryEndpoints.blob]"
                  }
                },
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "osProfile": {
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678",
                  "computerName": "appvm1",
                  "customData": "[base64('#!/bin/bash\nsudo apt update && sudo apt install nginx -y')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'appnic')]"
                    }
                  ]
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'appnic')]",
                "[resourceId('Microsoft.Storage/storageAccounts', uniqueString(resourceGroup().id))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', 'traditional-security-rg')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'traditional-security-rg'), 'Microsoft.Resources/deployments', 'nva')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'traditional-security-rg'), 'Microsoft.Resources/deployments', 'vnets')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "nva",
      "resourceGroup": "traditional-security-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "nvaLbIp": {
            "value": "10.1.0.100"
          },
          "subnet": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'traditional-security-rg'), 'Microsoft.Resources/deployments', 'vnets'), '2020-10-01').outputs.nvasubnet.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "3106866457648232784"
            }
          },
          "parameters": {
            "nvaLbIp": {
              "type": "string"
            },
            "subnet": {
              "type": "string"
            }
          },
          "variables": {
            "location": "westeurope",
            "script": "#!/bin/bash\r\n\r\n# Enable routing\r\nsudo sysctl -w net.ipv4.ip_forward=1\r\nsudo sysctl -p\r\n\r\n# Enable outbound SNAT (Internet access for VMs)\r\nsudo iptables -t nat -A POSTROUTING -s 10.0.0.0/8 -o eth0 -j MASQUERADE\r\n\r\n# Enable service - rewrite destination to app LB IP and rewrite source to self\r\nsudo iptables -t nat -A PREROUTING -p tcp -m tcp --dport 1001 -j DNAT --to-destination 10.0.0.100:80\r\nsudo iptables -t nat -A POSTROUTING -p tcp -d 10.0.0.100 --dport 80 -j MASQUERADE\r\n"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[format('nva{0}', uniqueString(resourceGroup().id))]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "nvansg",
              "location": "[variables('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "allowRange",
                    "properties": {
                      "description": "Allow web traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1000-2000",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "nvanic",
              "location": "[variables('location')]",
              "properties": {
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nvansg')]"
                },
                "enableIPForwarding": true,
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAddress": "10.1.0.10",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnet')]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[reference(resourceId('Microsoft.Network/loadBalancers', 'extlb')).backendAddressPools[0].id]"
                        },
                        {
                          "id": "[reference(resourceId('Microsoft.Network/loadBalancers', 'intlb')).backendAddressPools[0].id]"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', 'extlb')]",
                "[resourceId('Microsoft.Network/loadBalancers', 'intlb')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nvansg')]"
              ]
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2021-05-01",
              "name": "intlb",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "frontend",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "[parameters('nvaLbIp')]",
                      "subnet": {
                        "id": "[parameters('subnet')]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "backend"
                  }
                ],
                "probes": [
                  {
                    "name": "probe",
                    "properties": {
                      "port": 22,
                      "protocol": "Tcp"
                    }
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "all",
                    "properties": {
                      "protocol": "All",
                      "frontendPort": 0,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'intlb', 'frontend')]"
                      },
                      "backendPort": 0,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'intlb', 'backend')]"
                      },
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'intlb', 'probe')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "extip",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                  "domainNameLabel": "[format('tomas{0}', uniqueString(resourceGroup().id))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2021-05-01",
              "name": "extlb",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "frontend",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'extip')]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "backend"
                  }
                ],
                "probes": [
                  {
                    "name": "probe",
                    "properties": {
                      "port": 22,
                      "protocol": "Tcp"
                    }
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "web",
                    "properties": {
                      "protocol": "Tcp",
                      "frontendPort": 80,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'extlb', 'frontend')]"
                      },
                      "backendPort": 1001,
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'extlb', 'backend')]"
                      },
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'extlb', 'probe')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'extip')]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-07-01",
              "name": "nva1",
              "location": "[variables('location')]",
              "properties": {
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('nva{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
                  }
                },
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "osProfile": {
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678",
                  "computerName": "nva",
                  "customData": "[base64(variables('script'))]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'nvanic')]"
                    }
                  ]
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('nva{0}', uniqueString(resourceGroup().id)))]",
                "[resourceId('Microsoft.Network/networkInterfaces', 'nvanic')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', 'traditional-security-rg')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'traditional-security-rg'), 'Microsoft.Resources/deployments', 'vnets')]"
      ]
    }
  ]
}